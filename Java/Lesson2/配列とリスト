目的
  ・配列の理解
  ・リスト（ArrayList)の理解

Rubyの配列との違い
  ・Javaの配列は、格納する要素の数を最初に決める必要がある
  ・あとで要素数を変更することが不可能
  ・要素を増やす場合は、サイズの大きな配列を新たに作成する、またはArrayListというリストの一種を使用する

ArrayListとは
  ・要素の数を変更できる配列のようなもの。
  ・ウェブアプリケーション開発ではよく使われる。

Javaの配列の理解
-----------------------------------------------------
class Main {
  public static void main(String[] args) {
    int[] scores;
    scores = new int[3];

    scores[0] = 1;
    scores[1] = 5;
    scores[2] = 10;

    System.out.println(scores[0]);
    System.out.println(scores[1]);
    System.out.println(scores[2]);
  }
}
------------------------------------------------------

18行目　      int[] scores;
              ・配列の宣言、long型の整数を格納する配列の場合 "long[] scores;"と宣言する
19行目        scores = new int[3];
              ・int型の要素を3つ作成、そしてscoresの配列に代入している
21行目～23行目 scores[0] = 1;
              scores[1] = 5;
              scores[2] = 10;
              ・1番目の要素から3番目の要素に数字を代入している
              ・また、要素を取り出す場合は"scores[0]"のようにして取り出す

配列の記述の仕方

1.配列の宣言と同時に、要素の作成も行う方法
-------------------------
  int[] scores;
  scores = new int [3];
-------------------------
この2つのコードは以下のように1つのコードにすることができる。
--------------------------
int[] scores = new int[3];
--------------------------

2.配列の宣言時に型推論を使用する方法
--------------------------
var scores = new int[3];
--------------------------
このように、int型3つの要素を代入することで、scoresはそれらを格納するう配列であることが推論される

3.配列の宣言から値の代入まで全て同時に行う
--------------------------
int[] scores = {1, 5, 10};
--------------------------
記述は簡潔だが、宣言時に代入する値が確定していない場合は使用できない

また、配列の中のデータ型はすべて同じデータがでないといけない。

リストの理解
  リストはRubyの配列と似たデータ管理の仕組み
  ・要素は順序づけて管理
  ・要素を事後的に追加したり削除可能
  Javaのリストの種類
  ・ArrayList
  ・LinkedList
今回はArrayListについて学ぶ

ArrayListについて理解
  ・ArrayListは「可変長配列」を使用するための仕組み
  ・可変長配列とは、文字通り長さ（要素数）を変更できる配列のこと

Array Listの使い方
------------------------------------------------------------
import java.util.ArrayList;

class Main{
  public static void main(String[] args){
    ArrayList<Integer> scores = new ArrayList<Integer>();

    scores.add(1);
    scores.add(5);
    scores.add(10);
    scores.add(15);

    System.out.println(scores.get(0));
    System.out.println(scores.get(1));
    System.out.println(scores.get(2));
    System.out.println(scores.get(3));
  }
}
------------------------------------------------------------

1.ライブライをインポート
83行目  import java.util.ArrayList;
        ArrayListを使用する際は、ライブラリのインポートが必要で冒頭に上記の記述が必要

2.ArrayListの宣言
87行目  ArrayList<Integer> scores = new ArrayList<Integer>();
        1.整数（integer）を格納するArrayListを「scores」という名称で宣言
        2.ArrayListの要素を作成
        3.1に2を代入している。
        また　ArrayList<Integer> scores = new ArrayList<>();
        のように記述しても動作する。<>はダイヤモンド演算子と呼ばれ、型推論が行われる。

3.ArrayListに値を代入する
89行目～92行目  scores.add(1);
               scores.add(5);
               scores.add(10);
               scores.add(15);
addメソッドを使用し、要素をArrayListの末尾に追加する

4.ArrayListから要素を取り出す
要素を取り出す際はgetメソッドを使用し、以下のように記述する
  scores.get(0)
get(取得したい要素のインデックス)のように行う。
